p@system_table: {
  width: 8 argc: 0 rtype: INT level: 1
  arglist:  ()
  entries: {
    (name: r, type: FUNC, offset: 8, mytab: r@p)
  }
  code: [
t6 = 3;
t7 = x * t6;
PAR t7;
PAR r;
t8 = CALL q, 2;
  ]
}

r@p: {
  width: 8 argc: 1 rtype: INT level: 1
  arglist:  (b)
  entries: {
    (name: b, type: ARRPTT, offset: 0)
    (name: z, type: INT, offset: 8)
  }
  code: [
t3 = 6;
t4 = b[t3];
t5 = t4 + x;
z = t5;
RETURN z;
  ]
}

q@system_table: {
  width: 16 argc: 3 rtype: VOID level: 1
  arglist:  (s, b, x)
  entries: {
    (name: s, type: FUNPTT, offset: 4)
    (name: b, type: ARRPTT, offset: 0)
    (name: x, type: INT, offset: 12)
    (name: y, type: INT, offset: 16)
  }
  code: [
t0 = 10;
t1 = x + t0;
PAR t1;
t2 = CALL s, 1;
y = t2;
PRINT y;
  ]
}

system_table: {
  width: 28 argc: 0 rtype: VOID level: 0
  arglist:  ()
  entries: {
    (name: x, type: INT, offset: 4)
    (name: a, type: ARRAY, etype: int, base: 12, dims: 1, dim: [2])
    (name: q, type: FUNC, offset: 20, mytab: q@system_table)
    (name: p, type: FUNC, offset: 28, mytab: p@system_table)
  }
  code: [
t9 = 15;
x = t9;
t10 = 1;
t11 = 21;
a[t10] = t11;
t12 = CALL p, 0;
  ]
}

